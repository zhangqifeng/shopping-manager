{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"Password\",\n  data() {\n    const validatePassword = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请确认密码'));\n      } else if (value !== this.user.newPassword) {\n        callback(new Error('确认密码错误'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        password: [{\n          required: true,\n          message: '请输入原始密码',\n          trigger: 'blur'\n        }],\n        newPassword: [{\n          required: true,\n          message: '请输入新密码',\n          trigger: 'blur'\n        }],\n        confirmPassword: [{\n          validator: validatePassword,\n          required: true,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {},\n  methods: {\n    update() {\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request.put('/updatePassword', this.user).then(res => {\n            if (res.code === '200') {\n              // 成功更新\n              localStorage.removeItem('xm-user'); // 清除缓存的用户信息\n              this.$message.success('修改密码成功');\n              this.$router.push('/login');\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","validatePassword","rule","value","callback","Error","user","newPassword","JSON","parse","localStorage","getItem","rules","password","required","message","trigger","confirmPassword","validator","created","methods","update","$refs","formRef","validate","valid","$request","put","then","res","code","removeItem","$message","success","$router","push","error","msg"],"sources":["src/views/manager/Password.vue"],"sourcesContent":["\n<template>\n  <div>\n    <el-card style=\"width: 50%\">\n      <el-form ref=\"formRef\" :model=\"user\" :rules=\"rules\" label-width=\"100px\" style=\"padding-right: 50px\">\n        <el-form-item label=\"原始密码\" prop=\"password\">\n          <el-input show-password v-model=\"user.password\" placeholder=\"原始密码\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"新密码\" prop=\"newPassword\">\n          <el-input show-password v-model=\"user.newPassword\" placeholder=\"新密码\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"确认新密码\" prop=\"confirmPassword\">\n          <el-input show-password v-model=\"user.confirmPassword\" placeholder=\"确认密码\"></el-input>\n        </el-form-item>\n        <div style=\"text-align: center; margin-bottom: 20px\">\n          <el-button type=\"primary\" @click=\"update\">确认修改</el-button>\n        </div>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Password\",\n  data() {\n    const validatePassword = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请确认密码'))\n      } else if (value !== this.user.newPassword) {\n        callback(new Error('确认密码错误'))\n      } else {\n        callback()\n      }\n    }\n\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        password: [\n          { required: true, message: '请输入原始密码', trigger: 'blur' },\n        ],\n        newPassword: [\n          { required: true, message: '请输入新密码', trigger: 'blur' },\n        ],\n        confirmPassword: [\n          { validator: validatePassword, required: true, trigger: 'blur' },\n        ],\n      }\n    }\n  },\n  created() {\n\n  },\n  methods: {\n    update() {\n      this.$refs.formRef.validate((valid) => {\n        if (valid) {\n          this.$request.put('/updatePassword', this.user).then(res => {\n            if (res.code === '200') {\n              // 成功更新\n              localStorage.removeItem('xm-user')   // 清除缓存的用户信息\n              this.$message.success('修改密码成功')\n              this.$router.push('/login')\n            } else {\n              this.$message.error(res.msg)\n            }\n          })\n        }\n      })\n    },\n  }\n}\n</script>\n\n<style scoped>\n/deep/.el-form-item__label {\n  font-weight: bold;\n}\n\n</style>"],"mappings":";AAuBA;EACAA,IAAA;EACAC,KAAA;IACA,MAAAC,gBAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,WAAAF,KAAA,UAAAG,IAAA,CAAAC,WAAA;QACAH,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IAEA;MACAE,IAAA,EAAAE,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,KAAA;QACAC,QAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAT,WAAA,GACA;UAAAO,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAC,eAAA,GACA;UAAAC,SAAA,EAAAjB,gBAAA;UAAAa,QAAA;UAAAE,OAAA;QAAA;MAEA;IACA;EACA;EACAG,QAAA,GAEA;EACAC,OAAA;IACAC,OAAA;MACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAC,QAAA,CAAAC,GAAA,yBAAArB,IAAA,EAAAsB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA;cACApB,YAAA,CAAAqB,UAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;cACA,KAAAC,OAAA,CAAAC,IAAA;YACA;cACA,KAAAH,QAAA,CAAAI,KAAA,CAAAP,GAAA,CAAAQ,GAAA;YACA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}