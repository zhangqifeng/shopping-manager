{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"Register\",\n  data() {\n    // 验证码校验\n    const validatePassword = (rule, confirmPass, callback) => {\n      if (confirmPass === '') {\n        callback(new Error('请确认密码'));\n      } else if (confirmPass !== this.form.password) {\n        callback(new Error('两次输入的密码不一致'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      form: {},\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        confirmPass: [{\n          validator: validatePassword,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {},\n  methods: {\n    register() {\n      this.$refs['formRef'].validate(valid => {\n        if (valid) {\n          // 验证通过\n          this.$request.post('/register', this.form).then(res => {\n            if (res.code === '200') {\n              this.$router.push('/'); // 跳转登录页面\n              this.$message.success('注册成功');\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","validatePassword","rule","confirmPass","callback","Error","form","password","rules","username","required","message","trigger","validator","created","methods","register","$refs","validate","valid","$request","post","then","res","code","$router","push","$message","success","error","msg"],"sources":["src/views/Register.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div style=\"width: 400px; padding: 30px; background-color: white; border-radius: 5px;\">\n      <div style=\"text-align: center; font-size: 20px; margin-bottom: 20px; color: #333\">欢迎注册</div>\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"formRef\">\n        <el-form-item prop=\"username\">\n          <el-input prefix-icon=\"el-icon-user\" placeholder=\"请输入账号\" v-model=\"form.username\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"password\">\n          <el-input prefix-icon=\"el-icon-lock\" placeholder=\"请输入密码\" show-password  v-model=\"form.password\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"confirmPass\">\n          <el-input prefix-icon=\"el-icon-lock\" placeholder=\"请确认密码\" show-password  v-model=\"form.confirmPass\"></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-select v-model=\"form.role\" placeholder=\"请选择角色\" style=\"width: 100%\">\n            <el-option label=\"商家\" value=\"BUSINESS\"></el-option>\n            <el-option label=\"用户\" value=\"USER\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button style=\"width: 100%; background-color: #333; border-color: #333; color: white\" @click=\"register\">注 册</el-button>\n        </el-form-item>\n        <div style=\"display: flex; align-items: center\">\n          <div style=\"flex: 1\"></div>\n          <div style=\"flex: 1; text-align: right\">\n            已有账号？请 <a href=\"/login\">登录</a>\n          </div>\n        </div>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Register\",\n  data() {\n    // 验证码校验\n    const validatePassword = (rule, confirmPass, callback) => {\n      if (confirmPass === '') {\n        callback(new Error('请确认密码'))\n      } else if (confirmPass !== this.form.password) {\n        callback(new Error('两次输入的密码不一致'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      form: {},\n      rules: {\n        username: [\n          { required: true, message: '请输入账号', trigger: 'blur' },\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n        ],\n        confirmPass: [\n          { validator: validatePassword, trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  created() {\n\n  },\n  methods: {\n    register() {\n      this.$refs['formRef'].validate((valid) => {\n        if (valid) {\n          // 验证通过\n          this.$request.post('/register', this.form).then(res => {\n            if (res.code === '200') {\n              this.$router.push('/')  // 跳转登录页面\n              this.$message.success('注册成功')\n            } else {\n              this.$message.error(res.msg)\n            }\n          })\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.container {\n  height: 100vh;\n  overflow: hidden;\n  background-image: url(\"@/assets/imgs/bg1.jpg\");\n  background-size: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #666;\n}\na {\n  color: #2a60c9;\n}\n\n</style>"],"mappings":";AAmCA;EACAA,IAAA;EACAC,KAAA;IACA;IACA,MAAAC,gBAAA,GAAAA,CAAAC,IAAA,EAAAC,WAAA,EAAAC,QAAA;MACA,IAAAD,WAAA;QACAC,QAAA,KAAAC,KAAA;MACA,WAAAF,WAAA,UAAAG,IAAA,CAAAC,QAAA;QACAH,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA;MACAE,IAAA;MACAE,KAAA;QACAC,QAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAL,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAT,WAAA,GACA;UAAAU,SAAA,EAAAZ,gBAAA;UAAAW,OAAA;QAAA;MAEA;IACA;EACA;EACAE,QAAA,GAEA;EACAC,OAAA;IACAC,SAAA;MACA,KAAAC,KAAA,YAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA;UACA,KAAAC,QAAA,CAAAC,IAAA,mBAAAf,IAAA,EAAAgB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA,KAAAC,OAAA,CAAAC,IAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;YACA;cACA,KAAAD,QAAA,CAAAE,KAAA,CAAAN,GAAA,CAAAO,GAAA;YACA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}