{"ast":null,"code":"export default {\n  name: \"Login\",\n  data() {\n    return {\n      form: {},\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        role: [{\n          required: true,\n          message: '请选择角色',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {},\n  methods: {\n    login() {\n      this.$refs['formRef'].validate(valid => {\n        if (valid) {\n          // 验证通过\n          this.$request.post('/login', this.form).then(res => {\n            if (res.code === '200') {\n              let user = res.data;\n              localStorage.setItem(\"xm-user\", JSON.stringify(user)); // 存储用户数据\n              if (user.role === 'USER') {\n                location.href = '/front/home';\n              } else {\n                location.href = '/home';\n              }\n              this.$message.success('登录成功');\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","form","rules","username","required","message","trigger","password","role","created","methods","login","$refs","validate","valid","$request","post","then","res","code","user","localStorage","setItem","JSON","stringify","location","href","$message","success","error","msg"],"sources":["src/views/Login.vue"],"sourcesContent":["\n<template>\n  <div class=\"container\">\n    <div style=\"width: 400px; padding: 30px; background-color: white; border-radius: 5px;\">\n      <div style=\"text-align: center; font-size: 20px; margin-bottom: 20px; color: #333\">欢迎登录天猫网上购物商城</div>\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"formRef\">\n        <el-form-item prop=\"username\">\n          <el-input prefix-icon=\"el-icon-user\" placeholder=\"请输入账号\" v-model=\"form.username\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"password\">\n          <el-input prefix-icon=\"el-icon-lock\" placeholder=\"请输入密码\" show-password  v-model=\"form.password\"></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-select v-model=\"form.role\" placeholder=\"请选择角色\" style=\"width: 100%\">\n            <el-option label=\"管理员\" value=\"ADMIN\"></el-option>\n            <el-option label=\"商家\" value=\"BUSINESS\"></el-option>\n            <el-option label=\"用户\" value=\"USER\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button style=\"width: 100%; background-color: #AF3939FF; border-color: #AF3939FF; color: white\" @click=\"login\">登 录</el-button>\n        </el-form-item>\n        <div style=\"display: flex; align-items: center\">\n          <div style=\"flex: 1\"></div>\n          <div style=\"flex: 1; text-align: right\">\n            还没有账号？请 <a href=\"/register\">注册</a>\n          </div>\n        </div>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      form: {},\n      rules: {\n        username: [\n          { required: true, message: '请输入账号', trigger: 'blur' },\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n        ],\n        role: [\n          { required: true, message: '请选择角色', trigger: 'blur' },\n        ]\n      }\n    }\n  },\n  created() {\n\n  },\n  methods: {\n    login() {\n      this.$refs['formRef'].validate((valid) => {\n        if (valid) {\n          // 验证通过\n          this.$request.post('/login', this.form).then(res => {\n            if (res.code === '200') {\n              let user = res.data\n              localStorage.setItem(\"xm-user\", JSON.stringify(user))  // 存储用户数据\n              if (user.role === 'USER') {\n                location.href = '/front/home'\n              } else {\n                location.href = '/home'\n              }\n              this.$message.success('登录成功')\n            } else {\n              this.$message.error(res.msg)\n            }\n          })\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.container {\n  height: 100vh;\n  overflow: hidden;\n  background-image: url(\"@/assets/imgs/bg.jpg\");\n  background-size: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #666;\n}\na {\n  color: #2a60c9;\n}\n\n</style>"],"mappings":"AAkCA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,KAAA;QACAC,QAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAC,QAAA,GACA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAE,IAAA,GACA;UAAAJ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAG,QAAA,GAEA;EACAC,OAAA;IACAC,MAAA;MACA,KAAAC,KAAA,YAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA;UACA,KAAAC,QAAA,CAAAC,IAAA,gBAAAf,IAAA,EAAAgB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA,IAAAC,IAAA,GAAAF,GAAA,CAAAlB,IAAA;cACAqB,YAAA,CAAAC,OAAA,YAAAC,IAAA,CAAAC,SAAA,CAAAJ,IAAA;cACA,IAAAA,IAAA,CAAAZ,IAAA;gBACAiB,QAAA,CAAAC,IAAA;cACA;gBACAD,QAAA,CAAAC,IAAA;cACA;cACA,KAAAC,QAAA,CAAAC,OAAA;YACA;cACA,KAAAD,QAAA,CAAAE,KAAA,CAAAX,GAAA,CAAAY,GAAA;YACA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}